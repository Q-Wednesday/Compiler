Terminals unused in grammar

    T_TFLOAT
    T_TCHAR
    T_TBOOL
    T_TVOID
    T_EXTERN
    T_CEQUAL
    T_CNEQUAL
    T_CLT
    T_CLE
    T_CGT
    T_CGE
    T_LBRACKET
    T_RBRACKET
    T_DOT


State 35 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stats

    2 stats: stat
    3      | stats stat

    4 stat: var_dec T_SEMICOLON
    5     | func_dec
    6     | expr T_SEMICOLON
    7     | T_RETURN expr T_SEMICOLON

    8 block: T_LBRACE stats T_RBRACE

    9 func_dec: typename ident T_LPAREN varvec T_RPAREN block

   10 varvec: varvec T_COMMA var_dec
   11       | var_dec
   12       | %empty

   13 var_dec: typename ident
   14        | typename ident T_ASSIGN expr

   15 ident: T_IDENTIFIER

   16 typename: T_TINT
   17         | T_TDOUBLE

   18 assignmemt: ident T_ASSIGN expr

   19 expr: assignmemt
   20     | number
   21     | expr T_PLUS expr
   22     | expr T_MINUS expr
   23     | expr T_MULT expr
   24     | expr T_DIV expr
   25     | T_LPAREN expr T_LPAREN
   26     | T_LITERAL
   27     | call

   28 number: T_INTEGER
   29       | T_DOUBLE

   30 call: ident T_LPAREN call_args T_RPAREN

   31 call_args: call_args T_COMMA expr
   32          | expr
   33          | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_TINT <string> (258) 16
    T_TDOUBLE <string> (259) 17
    T_TFLOAT <string> (260)
    T_TCHAR <string> (261)
    T_TBOOL <string> (262)
    T_TVOID <string> (263)
    T_EXTERN <string> (264)
    T_RETURN <string> (265) 7
    T_IDENTIFIER <string> (266) 15
    T_INTEGER <string> (267) 28
    T_DOUBLE <string> (268) 29
    T_LITERAL <string> (269) 26
    T_ASSIGN <token> (270) 14 18
    T_CEQUAL <token> (271)
    T_CNEQUAL <token> (272)
    T_CLT <token> (273)
    T_CLE <token> (274)
    T_CGT <token> (275)
    T_CGE <token> (276)
    T_LPAREN <token> (277) 9 25 30
    T_RPAREN <token> (278) 9 30
    T_LBRACE <token> (279) 8
    T_RBRACE <token> (280) 8
    T_LBRACKET <token> (281)
    T_RBRACKET <token> (282)
    T_SEMICOLON <token> (283) 4 6 7
    T_PLUS <token> (284) 21
    T_MINUS <token> (285) 22
    T_MULT <token> (286) 23
    T_DIV <token> (287) 24
    T_DOT <token> (288)
    T_COMMA <token> (289) 10 31


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    program <block> (36)
        on left: 1
        on right: 0
    stats <block> (37)
        on left: 2 3
        on right: 1 3 8
    stat <stat> (38)
        on left: 4 5 6 7
        on right: 2 3
    block <block> (39)
        on left: 8
        on right: 9
    func_dec <stat> (40)
        on left: 9
        on right: 5
    varvec <varvec> (41)
        on left: 10 11 12
        on right: 9 10
    var_dec <stat> (42)
        on left: 13 14
        on right: 4 10 11
    ident <ident> (43)
        on left: 15
        on right: 9 13 14 18 30
    typename <ident> (44)
        on left: 16 17
        on right: 9 13 14
    assignmemt <expr> (45)
        on left: 18
        on right: 19
    expr <expr> (46)
        on left: 19 20 21 22 23 24 25 26 27
        on right: 6 7 14 18 21 22 23 24 25 31 32
    number <expr> (47)
        on left: 28 29
        on right: 20
    call <expr> (48)
        on left: 30
        on right: 27
    call_args <exprvec> (49)
        on left: 31 32 33
        on right: 30 31


State 0

    0 $accept: . program $end

    T_TINT        shift, and go to state 1
    T_TDOUBLE     shift, and go to state 2
    T_RETURN      shift, and go to state 3
    T_IDENTIFIER  shift, and go to state 4
    T_INTEGER     shift, and go to state 5
    T_DOUBLE      shift, and go to state 6
    T_LITERAL     shift, and go to state 7
    T_LPAREN      shift, and go to state 8

    program     go to state 9
    stats       go to state 10
    stat        go to state 11
    func_dec    go to state 12
    var_dec     go to state 13
    ident       go to state 14
    typename    go to state 15
    assignmemt  go to state 16
    expr        go to state 17
    number      go to state 18
    call        go to state 19


State 1

   16 typename: T_TINT .

    $default  reduce using rule 16 (typename)


State 2

   17 typename: T_TDOUBLE .

    $default  reduce using rule 17 (typename)


State 3

    7 stat: T_RETURN . expr T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 4
    T_INTEGER     shift, and go to state 5
    T_DOUBLE      shift, and go to state 6
    T_LITERAL     shift, and go to state 7
    T_LPAREN      shift, and go to state 8

    ident       go to state 14
    assignmemt  go to state 16
    expr        go to state 20
    number      go to state 18
    call        go to state 19


State 4

   15 ident: T_IDENTIFIER .

    $default  reduce using rule 15 (ident)


State 5

   28 number: T_INTEGER .

    $default  reduce using rule 28 (number)


State 6

   29 number: T_DOUBLE .

    $default  reduce using rule 29 (number)


State 7

   26 expr: T_LITERAL .

    $default  reduce using rule 26 (expr)


State 8

   25 expr: T_LPAREN . expr T_LPAREN

    T_IDENTIFIER  shift, and go to state 4
    T_INTEGER     shift, and go to state 5
    T_DOUBLE      shift, and go to state 6
    T_LITERAL     shift, and go to state 7
    T_LPAREN      shift, and go to state 8

    ident       go to state 14
    assignmemt  go to state 16
    expr        go to state 21
    number      go to state 18
    call        go to state 19


State 9

    0 $accept: program . $end

    $end  shift, and go to state 22


State 10

    1 program: stats .
    3 stats: stats . stat

    T_TINT        shift, and go to state 1
    T_TDOUBLE     shift, and go to state 2
    T_RETURN      shift, and go to state 3
    T_IDENTIFIER  shift, and go to state 4
    T_INTEGER     shift, and go to state 5
    T_DOUBLE      shift, and go to state 6
    T_LITERAL     shift, and go to state 7
    T_LPAREN      shift, and go to state 8

    $default  reduce using rule 1 (program)

    stat        go to state 23
    func_dec    go to state 12
    var_dec     go to state 13
    ident       go to state 14
    typename    go to state 15
    assignmemt  go to state 16
    expr        go to state 17
    number      go to state 18
    call        go to state 19


State 11

    2 stats: stat .

    $default  reduce using rule 2 (stats)


State 12

    5 stat: func_dec .

    $default  reduce using rule 5 (stat)


State 13

    4 stat: var_dec . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 24


State 14

   18 assignmemt: ident . T_ASSIGN expr
   30 call: ident . T_LPAREN call_args T_RPAREN

    T_ASSIGN  shift, and go to state 25
    T_LPAREN  shift, and go to state 26


State 15

    9 func_dec: typename . ident T_LPAREN varvec T_RPAREN block
   13 var_dec: typename . ident
   14        | typename . ident T_ASSIGN expr

    T_IDENTIFIER  shift, and go to state 4

    ident  go to state 27


State 16

   19 expr: assignmemt .

    $default  reduce using rule 19 (expr)


State 17

    6 stat: expr . T_SEMICOLON
   21 expr: expr . T_PLUS expr
   22     | expr . T_MINUS expr
   23     | expr . T_MULT expr
   24     | expr . T_DIV expr

    T_SEMICOLON  shift, and go to state 28
    T_PLUS       shift, and go to state 29
    T_MINUS      shift, and go to state 30
    T_MULT       shift, and go to state 31
    T_DIV        shift, and go to state 32


State 18

   20 expr: number .

    $default  reduce using rule 20 (expr)


State 19

   27 expr: call .

    $default  reduce using rule 27 (expr)


State 20

    7 stat: T_RETURN expr . T_SEMICOLON
   21 expr: expr . T_PLUS expr
   22     | expr . T_MINUS expr
   23     | expr . T_MULT expr
   24     | expr . T_DIV expr

    T_SEMICOLON  shift, and go to state 33
    T_PLUS       shift, and go to state 29
    T_MINUS      shift, and go to state 30
    T_MULT       shift, and go to state 31
    T_DIV        shift, and go to state 32


State 21

   21 expr: expr . T_PLUS expr
   22     | expr . T_MINUS expr
   23     | expr . T_MULT expr
   24     | expr . T_DIV expr
   25     | T_LPAREN expr . T_LPAREN

    T_LPAREN  shift, and go to state 34
    T_PLUS    shift, and go to state 29
    T_MINUS   shift, and go to state 30
    T_MULT    shift, and go to state 31
    T_DIV     shift, and go to state 32


State 22

    0 $accept: program $end .

    $default  accept


State 23

    3 stats: stats stat .

    $default  reduce using rule 3 (stats)


State 24

    4 stat: var_dec T_SEMICOLON .

    $default  reduce using rule 4 (stat)


State 25

   18 assignmemt: ident T_ASSIGN . expr

    T_IDENTIFIER  shift, and go to state 4
    T_INTEGER     shift, and go to state 5
    T_DOUBLE      shift, and go to state 6
    T_LITERAL     shift, and go to state 7
    T_LPAREN      shift, and go to state 8

    ident       go to state 14
    assignmemt  go to state 16
    expr        go to state 35
    number      go to state 18
    call        go to state 19


State 26

   30 call: ident T_LPAREN . call_args T_RPAREN

    T_IDENTIFIER  shift, and go to state 4
    T_INTEGER     shift, and go to state 5
    T_DOUBLE      shift, and go to state 6
    T_LITERAL     shift, and go to state 7
    T_LPAREN      shift, and go to state 8

    $default  reduce using rule 33 (call_args)

    ident       go to state 14
    assignmemt  go to state 16
    expr        go to state 36
    number      go to state 18
    call        go to state 19
    call_args   go to state 37


State 27

    9 func_dec: typename ident . T_LPAREN varvec T_RPAREN block
   13 var_dec: typename ident .
   14        | typename ident . T_ASSIGN expr

    T_ASSIGN  shift, and go to state 38
    T_LPAREN  shift, and go to state 39

    $default  reduce using rule 13 (var_dec)


State 28

    6 stat: expr T_SEMICOLON .

    $default  reduce using rule 6 (stat)


State 29

   21 expr: expr T_PLUS . expr

    T_IDENTIFIER  shift, and go to state 4
    T_INTEGER     shift, and go to state 5
    T_DOUBLE      shift, and go to state 6
    T_LITERAL     shift, and go to state 7
    T_LPAREN      shift, and go to state 8

    ident       go to state 14
    assignmemt  go to state 16
    expr        go to state 40
    number      go to state 18
    call        go to state 19


State 30

   22 expr: expr T_MINUS . expr

    T_IDENTIFIER  shift, and go to state 4
    T_INTEGER     shift, and go to state 5
    T_DOUBLE      shift, and go to state 6
    T_LITERAL     shift, and go to state 7
    T_LPAREN      shift, and go to state 8

    ident       go to state 14
    assignmemt  go to state 16
    expr        go to state 41
    number      go to state 18
    call        go to state 19


State 31

   23 expr: expr T_MULT . expr

    T_IDENTIFIER  shift, and go to state 4
    T_INTEGER     shift, and go to state 5
    T_DOUBLE      shift, and go to state 6
    T_LITERAL     shift, and go to state 7
    T_LPAREN      shift, and go to state 8

    ident       go to state 14
    assignmemt  go to state 16
    expr        go to state 42
    number      go to state 18
    call        go to state 19


State 32

   24 expr: expr T_DIV . expr

    T_IDENTIFIER  shift, and go to state 4
    T_INTEGER     shift, and go to state 5
    T_DOUBLE      shift, and go to state 6
    T_LITERAL     shift, and go to state 7
    T_LPAREN      shift, and go to state 8

    ident       go to state 14
    assignmemt  go to state 16
    expr        go to state 43
    number      go to state 18
    call        go to state 19


State 33

    7 stat: T_RETURN expr T_SEMICOLON .

    $default  reduce using rule 7 (stat)


State 34

   25 expr: T_LPAREN expr T_LPAREN .

    $default  reduce using rule 25 (expr)


State 35

   18 assignmemt: ident T_ASSIGN expr .
   21 expr: expr . T_PLUS expr
   22     | expr . T_MINUS expr
   23     | expr . T_MULT expr
   24     | expr . T_DIV expr

    T_PLUS   shift, and go to state 29
    T_MINUS  shift, and go to state 30
    T_MULT   shift, and go to state 31
    T_DIV    shift, and go to state 32

    T_PLUS    [reduce using rule 18 (assignmemt)]
    T_MINUS   [reduce using rule 18 (assignmemt)]
    T_MULT    [reduce using rule 18 (assignmemt)]
    T_DIV     [reduce using rule 18 (assignmemt)]
    $default  reduce using rule 18 (assignmemt)


State 36

   21 expr: expr . T_PLUS expr
   22     | expr . T_MINUS expr
   23     | expr . T_MULT expr
   24     | expr . T_DIV expr
   32 call_args: expr .

    T_PLUS   shift, and go to state 29
    T_MINUS  shift, and go to state 30
    T_MULT   shift, and go to state 31
    T_DIV    shift, and go to state 32

    $default  reduce using rule 32 (call_args)


State 37

   30 call: ident T_LPAREN call_args . T_RPAREN
   31 call_args: call_args . T_COMMA expr

    T_RPAREN  shift, and go to state 44
    T_COMMA   shift, and go to state 45


State 38

   14 var_dec: typename ident T_ASSIGN . expr

    T_IDENTIFIER  shift, and go to state 4
    T_INTEGER     shift, and go to state 5
    T_DOUBLE      shift, and go to state 6
    T_LITERAL     shift, and go to state 7
    T_LPAREN      shift, and go to state 8

    ident       go to state 14
    assignmemt  go to state 16
    expr        go to state 46
    number      go to state 18
    call        go to state 19


State 39

    9 func_dec: typename ident T_LPAREN . varvec T_RPAREN block

    T_TINT     shift, and go to state 1
    T_TDOUBLE  shift, and go to state 2

    $default  reduce using rule 12 (varvec)

    varvec    go to state 47
    var_dec   go to state 48
    typename  go to state 49


State 40

   21 expr: expr . T_PLUS expr
   21     | expr T_PLUS expr .
   22     | expr . T_MINUS expr
   23     | expr . T_MULT expr
   24     | expr . T_DIV expr

    T_MULT  shift, and go to state 31
    T_DIV   shift, and go to state 32

    $default  reduce using rule 21 (expr)


State 41

   21 expr: expr . T_PLUS expr
   22     | expr . T_MINUS expr
   22     | expr T_MINUS expr .
   23     | expr . T_MULT expr
   24     | expr . T_DIV expr

    T_MULT  shift, and go to state 31
    T_DIV   shift, and go to state 32

    $default  reduce using rule 22 (expr)


State 42

   21 expr: expr . T_PLUS expr
   22     | expr . T_MINUS expr
   23     | expr . T_MULT expr
   23     | expr T_MULT expr .
   24     | expr . T_DIV expr

    $default  reduce using rule 23 (expr)


State 43

   21 expr: expr . T_PLUS expr
   22     | expr . T_MINUS expr
   23     | expr . T_MULT expr
   24     | expr . T_DIV expr
   24     | expr T_DIV expr .

    $default  reduce using rule 24 (expr)


State 44

   30 call: ident T_LPAREN call_args T_RPAREN .

    $default  reduce using rule 30 (call)


State 45

   31 call_args: call_args T_COMMA . expr

    T_IDENTIFIER  shift, and go to state 4
    T_INTEGER     shift, and go to state 5
    T_DOUBLE      shift, and go to state 6
    T_LITERAL     shift, and go to state 7
    T_LPAREN      shift, and go to state 8

    ident       go to state 14
    assignmemt  go to state 16
    expr        go to state 50
    number      go to state 18
    call        go to state 19


State 46

   14 var_dec: typename ident T_ASSIGN expr .
   21 expr: expr . T_PLUS expr
   22     | expr . T_MINUS expr
   23     | expr . T_MULT expr
   24     | expr . T_DIV expr

    T_PLUS   shift, and go to state 29
    T_MINUS  shift, and go to state 30
    T_MULT   shift, and go to state 31
    T_DIV    shift, and go to state 32

    $default  reduce using rule 14 (var_dec)


State 47

    9 func_dec: typename ident T_LPAREN varvec . T_RPAREN block
   10 varvec: varvec . T_COMMA var_dec

    T_RPAREN  shift, and go to state 51
    T_COMMA   shift, and go to state 52


State 48

   11 varvec: var_dec .

    $default  reduce using rule 11 (varvec)


State 49

   13 var_dec: typename . ident
   14        | typename . ident T_ASSIGN expr

    T_IDENTIFIER  shift, and go to state 4

    ident  go to state 53


State 50

   21 expr: expr . T_PLUS expr
   22     | expr . T_MINUS expr
   23     | expr . T_MULT expr
   24     | expr . T_DIV expr
   31 call_args: call_args T_COMMA expr .

    T_PLUS   shift, and go to state 29
    T_MINUS  shift, and go to state 30
    T_MULT   shift, and go to state 31
    T_DIV    shift, and go to state 32

    $default  reduce using rule 31 (call_args)


State 51

    9 func_dec: typename ident T_LPAREN varvec T_RPAREN . block

    T_LBRACE  shift, and go to state 54

    block  go to state 55


State 52

   10 varvec: varvec T_COMMA . var_dec

    T_TINT     shift, and go to state 1
    T_TDOUBLE  shift, and go to state 2

    var_dec   go to state 56
    typename  go to state 49


State 53

   13 var_dec: typename ident .
   14        | typename ident . T_ASSIGN expr

    T_ASSIGN  shift, and go to state 38

    $default  reduce using rule 13 (var_dec)


State 54

    8 block: T_LBRACE . stats T_RBRACE

    T_TINT        shift, and go to state 1
    T_TDOUBLE     shift, and go to state 2
    T_RETURN      shift, and go to state 3
    T_IDENTIFIER  shift, and go to state 4
    T_INTEGER     shift, and go to state 5
    T_DOUBLE      shift, and go to state 6
    T_LITERAL     shift, and go to state 7
    T_LPAREN      shift, and go to state 8

    stats       go to state 57
    stat        go to state 11
    func_dec    go to state 12
    var_dec     go to state 13
    ident       go to state 14
    typename    go to state 15
    assignmemt  go to state 16
    expr        go to state 17
    number      go to state 18
    call        go to state 19


State 55

    9 func_dec: typename ident T_LPAREN varvec T_RPAREN block .

    $default  reduce using rule 9 (func_dec)


State 56

   10 varvec: varvec T_COMMA var_dec .

    $default  reduce using rule 10 (varvec)


State 57

    3 stats: stats . stat
    8 block: T_LBRACE stats . T_RBRACE

    T_TINT        shift, and go to state 1
    T_TDOUBLE     shift, and go to state 2
    T_RETURN      shift, and go to state 3
    T_IDENTIFIER  shift, and go to state 4
    T_INTEGER     shift, and go to state 5
    T_DOUBLE      shift, and go to state 6
    T_LITERAL     shift, and go to state 7
    T_LPAREN      shift, and go to state 8
    T_RBRACE      shift, and go to state 58

    stat        go to state 23
    func_dec    go to state 12
    var_dec     go to state 13
    ident       go to state 14
    typename    go to state 15
    assignmemt  go to state 16
    expr        go to state 17
    number      go to state 18
    call        go to state 19


State 58

    8 block: T_LBRACE stats T_RBRACE .

    $default  reduce using rule 8 (block)
